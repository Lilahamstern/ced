/* eslint-disable */
// source: project.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.project.addProjectParams', null, global);
goog.exportSymbol('proto.project.addProjectResponse', null, global);
goog.exportSymbol('proto.project.getProjectsParams', null, global);
goog.exportSymbol('proto.project.projectObject', null, global);
goog.exportSymbol('proto.project.projectResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.project.addProjectParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.project.addProjectParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.project.addProjectParams.displayName = 'proto.project.addProjectParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.project.getProjectsParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.project.getProjectsParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.project.getProjectsParams.displayName =
    'proto.project.getProjectsParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.project.addProjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.project.addProjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.project.addProjectResponse.displayName =
    'proto.project.addProjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.project.projectResponse = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.project.projectResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.project.projectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.project.projectResponse.displayName = 'proto.project.projectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.project.projectObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.project.projectObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.project.projectObject.displayName = 'proto.project.projectObject';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.project.addProjectParams.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.project.addProjectParams.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.project.addProjectParams} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.project.addProjectParams.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        projectId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        orderId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        manager: jspb.Message.getFieldWithDefault(msg, 5, ''),
        client: jspb.Message.getFieldWithDefault(msg, 6, ''),
        sector: jspb.Message.getFieldWithDefault(msg, 7, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.project.addProjectParams}
 */
proto.project.addProjectParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.project.addProjectParams();
  return proto.project.addProjectParams.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.project.addProjectParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.project.addProjectParams}
 */
proto.project.addProjectParams.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProjectId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrderId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setManager(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setClient(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setSector(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.project.addProjectParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.project.addProjectParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.project.addProjectParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.project.addProjectParams.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getManager();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getClient();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional int32 project_id = 1;
 * @return {number}
 */
proto.project.addProjectParams.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 order_id = 2;
 * @return {number}
 */
proto.project.addProjectParams.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.project.addProjectParams.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.project.addProjectParams.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string manager = 5;
 * @return {string}
 */
proto.project.addProjectParams.prototype.getManager = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setManager = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string client = 6;
 * @return {string}
 */
proto.project.addProjectParams.prototype.getClient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setClient = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string sector = 7;
 * @return {string}
 */
proto.project.addProjectParams.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.addProjectParams} returns this
 */
proto.project.addProjectParams.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.project.getProjectsParams.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.project.getProjectsParams.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.project.getProjectsParams} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.project.getProjectsParams.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        search: jspb.Message.getFieldWithDefault(msg, 1, ''),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.project.getProjectsParams}
 */
proto.project.getProjectsParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.project.getProjectsParams();
  return proto.project.getProjectsParams.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.project.getProjectsParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.project.getProjectsParams}
 */
proto.project.getProjectsParams.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSearch(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setLimit(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.project.getProjectsParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.project.getProjectsParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.project.getProjectsParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.project.getProjectsParams.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
};

/**
 * optional string search = 1;
 * @return {string}
 */
proto.project.getProjectsParams.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.getProjectsParams} returns this
 */
proto.project.getProjectsParams.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.project.getProjectsParams.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.getProjectsParams} returns this
 */
proto.project.getProjectsParams.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.project.addProjectResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.project.addProjectResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.project.addProjectResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.project.addProjectResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        projectId: jspb.Message.getFieldWithDefault(msg, 1, 0)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.project.addProjectResponse}
 */
proto.project.addProjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.project.addProjectResponse();
  return proto.project.addProjectResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.project.addProjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.project.addProjectResponse}
 */
proto.project.addProjectResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProjectId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.project.addProjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.project.addProjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.project.addProjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.project.addProjectResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
};

/**
 * optional int32 project_id = 1;
 * @return {number}
 */
proto.project.addProjectResponse.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.addProjectResponse} returns this
 */
proto.project.addProjectResponse.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.project.projectResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.project.projectResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.project.projectResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.project.projectResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.project.projectResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        projectsList: jspb.Message.toObjectList(
          msg.getProjectsList(),
          proto.project.projectObject.toObject,
          includeInstance
        )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.project.projectResponse}
 */
proto.project.projectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.project.projectResponse();
  return proto.project.projectResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.project.projectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.project.projectResponse}
 */
proto.project.projectResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.project.projectObject();
        reader.readMessage(
          value,
          proto.project.projectObject.deserializeBinaryFromReader
        );
        msg.addProjects(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.project.projectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.project.projectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.project.projectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.project.projectResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.project.projectObject.serializeBinaryToWriter
    );
  }
};

/**
 * repeated projectObject projects = 1;
 * @return {!Array<!proto.project.projectObject>}
 */
proto.project.projectResponse.prototype.getProjectsList = function() {
  return /** @type{!Array<!proto.project.projectObject>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.project.projectObject,
    1
  ));
};

/**
 * @param {!Array<!proto.project.projectObject>} value
 * @return {!proto.project.projectResponse} returns this
 */
proto.project.projectResponse.prototype.setProjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.project.projectObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.project.projectObject}
 */
proto.project.projectResponse.prototype.addProjects = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.project.projectObject,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.project.projectResponse} returns this
 */
proto.project.projectResponse.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.project.projectObject.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.project.projectObject.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.project.projectObject} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.project.projectObject.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        projectId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        orderId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        manager: jspb.Message.getFieldWithDefault(msg, 5, ''),
        client: jspb.Message.getFieldWithDefault(msg, 6, ''),
        sector: jspb.Message.getFieldWithDefault(msg, 7, ''),
        createdAt:
          (f = msg.getCreatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        updatedAt:
          (f = msg.getUpdatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.project.projectObject}
 */
proto.project.projectObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.project.projectObject();
  return proto.project.projectObject.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.project.projectObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.project.projectObject}
 */
proto.project.projectObject.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProjectId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrderId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setManager(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setClient(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setSector(value);
        break;
      case 8:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setCreatedAt(value);
        break;
      case 9:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.project.projectObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.project.projectObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.project.projectObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.project.projectObject.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getManager();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getClient();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};

/**
 * optional int32 project_id = 1;
 * @return {number}
 */
proto.project.projectObject.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 order_id = 2;
 * @return {number}
 */
proto.project.projectObject.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.project.projectObject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.project.projectObject.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string manager = 5;
 * @return {string}
 */
proto.project.projectObject.prototype.getManager = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setManager = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string client = 6;
 * @return {string}
 */
proto.project.projectObject.prototype.getClient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setClient = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string sector = 7;
 * @return {string}
 */
proto.project.projectObject.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional google.protobuf.Timestamp created_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.project.projectObject.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    8
  ));
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.project.projectObject.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional google.protobuf.Timestamp updated_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.project.projectObject.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    9
  ));
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.project.projectObject} returns this
 */
proto.project.projectObject.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.project.projectObject.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};

goog.object.extend(exports, proto.project);
