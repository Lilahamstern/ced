plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'net.hamsterapps'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    karateVersion = '1.0.0'
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	compile 'com.graphql-java-kickstart:graphql-java-tools:6.0.2'
	compile 'com.graphql-java-kickstart:graphql-java-servlet:9.1.0'
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:7.0.1'
	runtimeOnly 'com.graphql-java-kickstart:graphiql-spring-boot-starter:7.0.1'
	

	compile 'com.graphql-java:graphql-java:14.0'

	implementation 'com.google.guava:guava:29.0-jre'


	runtimeOnly 'org.postgresql:postgresql'
	

  testCompile "com.intuit.karate:karate-junit5:${karateVersion}"
  testCompile "com.intuit.karate:karate-apache:${karateVersion}"
  testCompile "net.masterthought:cucumber-reporting:3.8.0"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
  useJUnitPlatform()
  systemProperty "karate.options", System.properties.getProperty("karate.options")
  systemProperty "karate.env", System.properties.getProperty("karate.env")
  outputs.upToDateWhen { false }
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
}
